version: "3.3"

services:

  traefik:
    image: "traefik:v3.0"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=rutvik2611@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./persist/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - backboneNetwork

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${MAIN_DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    networks:
        - backboneNetwork

  portainer:
    image: "portainer/portainer"
    container_name: "portainer"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./persist/portainer/data:/data"  # Mount volume for Portainer data persistence
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${MAIN_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"  # Define the entry point
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"  # Define the TLS resolver
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"  # Define the Portainer service port
    networks:
      - backboneNetwork

  clip-sync:
    image: temp12611/clipsync:latest
    container_name: "clip-sync"
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      AWS_REGION: ${AWS_REGION:-}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID:-}
      url: ${url}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      pass: ${pass}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.clipsync.rule=Host(`clipsync.${MAIN_DOMAIN}`)"
      - "traefik.http.routers.clipsync.entrypoints=websecure"
      - "traefik.http.routers.clipsync.tls.certresolver=myresolver"
      - "traefik.http.services.clipsync.loadbalancer.server.port=5001"
    networks:
      - backboneNetwork

#  openvpn:
#    cap_add:
#      - NET_ADMIN
#    image: "kylemanna/openvpn"
#    container_name: "openvpn"
#    ports:
#      - "1194:1194/udp"
#    volumes:
#      - ./openvpn:/etc/openvpn
#      - ./init_openvpn.sh:/init_openvpn.sh:rw # Mount the script file
#    restart: always
#    networks:
#      - backboneNetwork
#    environment:
#      - MAIN_DOMAIN=${MAIN_DOMAIN}
#      - EASYRSA_BATCH=1
#      - EASYRSA_REQ_CN=OpenVPN-CA
#      - EASYRSA_CA_EXPIRE=3650
#      - EASYRSA_CERT_EXPIRE=3650
#      - EASYRSA_KEY_SIZE=2048
#      - EASYRSA_PKI=/etc/openvpn/pki
#      - EASYRSA_PASSIN=pass:LONGPASSWORD
#      - EASYRSA_PASSOUT=pass:LONGPASSWORD
#    command: >
#      sh -c '
#        ovpn_genconfig -u udp://vpn.${MAIN_DOMAIN} &&
#        ovpn_initpki nopass &&
#        easyrsa build-client-full r26114 nopass &&
#        ovpn_getclient r26114 > /etc/openvpn/r26114.ovpn &&
#        ovpn_run
#      '
#    user: root
#    labels:
#      - "traefik.enable=true"
#      - "traefik.udp.routers.openvpn.rule=Host(`vpn.${MAIN_DOMAIN}`)"
#      - "traefik.udp.routers.openvpn.entrypoints=udp"
#      - "traefik.udp.services.openvpn.loadbalancer.server.port=1194"

#  openvpn-as:
#    image: openvpn/openvpn-as
#    container_name: openvpn-as
#    cap_add:
#      - NET_ADMIN
#    ports:
#      - "943:943"
##      - "443:443"
#      - "1194:1194/udp"
#    volumes:
#      - ./persist/openvpn:/openvpn
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.openvpn.rule=Host(`openvpn.${MAIN_DOMAIN}`)"
#      - "traefik.http.routers.openvpn.entrypoints=websecure"
#      - "traefik.http.routers.openvpn.tls.certresolver=myresolver"
#      - "traefik.http.services.openvpn.loadbalancer.server.port=443"
#
#    networks:
#      - backboneNetwork

networks:
  backboneNetwork:
    external: true
